@startuml

package ParkingManagerAggregate {
	class ParkingManager <<VO>> {
		+ List<ParkingBoy>
		+ ParkingBoy findAvailableParkingBoy()
	}

	class ParkingManagerConfig <<Entity>> <<Aggregate>> {
		+ List<ParkingBoyId>
		+ Car findAvailableParkingBoy(Ticket)
	}

	ParkingManagerConfig .>  ParkingManager
}

package ParkingBoy {
	interface ParkingStrategy <<VO>> {
		+ findAvailableParkingLot(List<ParkingLot>)
	}

	class ParkingBoy <<VO>> {
		- List<ParkingLot> parkingLots
		+ ParkingLot findAvailableParkingLot()
	}

	class ParkingBoyConfig <<Entity>> <<Aggregate>> {
		- List<ParkingLotId> parkingLots
		- ParkingStrategyEnum parkingStrategy
	}
	ParkingManager ..>  ParkingBoy
	ParkingBoyConfig .> ParkingBoy
	ParkingBoy o--> "1" ParkingStrategy
	ParkingStrategy <|.. NaturalParkingStrategy
	ParkingStrategy <|.. MaxSpaceFirstParkingStrategy

}

package ParkingLot {

	class ParkingLot <<Entity>> <<Aggregate>> {
		- int space
		- ParkingLotId id
		+ Ticket park(Car)
		+ Car getBackCar(Car)
	}

	class Car <<VO>> {
		- String plateNumber
	}

	class Ticket <<VO>> {
		- ParkingLotId id
		- String validationNumber
	}

	ParkingBoy o-> "*" ParkingLot
	Ticket *--> "1" Car
	ParkingLot o--> "*" Car
	ParkingLot o--> "*" Ticket
}


@enduml
